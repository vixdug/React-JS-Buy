{"version":3,"sources":["logo.svg","components/shopify/LineItem.js","components/shopify/Cart.js","reducers/cart.js","store.js","components/shopify/VariantSelector.js","components/shopify/Product.js","components/shopify/Products.js","components/Header.js","components/Page.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LineItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","decrementQuantity","bind","assertThisInitialized","incrementQuantity","lineItemId","updatedQuantity","line_item","quantity","updateQuantityInCart","_this2","react_default","a","createElement","className","variant","image","src","alt","concat","title","onClick","id","price","toFixed","removeLineItemInCart","Component","Cart","openCheckout","window","open","checkout","webUrl","line_items","lineItems","map","shopify_LineItem","key","toString","isCartOpen","handleCartClose","subtotalPrice","totalTax","totalPrice","initState","products","shop","createStore","state","arguments","length","undefined","action","type","objectSpread","client","payload","VariantSelector","name","option","onChange","handleOptionChange","values","value","Product","defaultOptionValues","product","options","forEach","selector","selectedOptions","handleQuantityChange","findImage","images","variantId","primary","filter","variant_ids","includes","event","target","selectedVariant","helpers","variantForOptions","setState","selectedVariantImage","attrs","selectedVariantQuantity","variantImage","variants","variantQuantity","variantSelectors","shopify_VariantSelector","min","defaultValue","addVariantToCart","Products","shopify_Product","HeaderH1","Header","as","icon","textAlign","Icon","circular","Page","store","getState","lineItemsToAdd","parseInt","checkoutId","addLineItems","then","res","dispatch","oProducts","shopify_Products","components_Header","React","connect","Nav","handleItemClick","e","_ref","activeItem","Menu","size","Item","color","position","active","handleCartOpen","Button","animated","Content","hidden","visible","App","lineItemsToUpdate","updateLineItems","removeLineItems","components_Nav","shopify_Cart","components_Page","Boolean","location","hostname","match","Client","buildClient","storefrontAccessToken","domain","fetchAll","create","fetchInfo","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccebd415.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\n\nclass LineItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.decrementQuantity = this.decrementQuantity.bind(this);\n    this.incrementQuantity = this.incrementQuantity.bind(this);\n  }\n\n  decrementQuantity(lineItemId) {\n    const updatedQuantity = this.props.line_item.quantity - 1\n    this.props.updateQuantityInCart(lineItemId, updatedQuantity);\n  }\n\n  incrementQuantity(lineItemId) {\n    const updatedQuantity = this.props.line_item.quantity + 1\n    this.props.updateQuantityInCart(lineItemId, updatedQuantity);\n  }\n\n  render() {\n    return (\n      <li className=\"Line-item\">\n        <div className=\"Line-item__img\">\n          {this.props.line_item.variant.image ? <img src={this.props.line_item.variant.image.src} alt={`${this.props.line_item.title} product shot`}/> : null}\n        </div>\n        <div className=\"Line-item__content\">\n          <div className=\"Line-item__content-row\">\n            <div className=\"Line-item__variant-title\">\n              {this.props.line_item.variant.title}\n            </div>\n            <span className=\"Line-item__title\">\n              {this.props.line_item.title}\n            </span>\n          </div>\n          <div className=\"Line-item__content-row\">\n            <div className=\"Line-item__quantity-container\">\n              <button className=\"Line-item__quantity-update\" onClick={() => this.decrementQuantity(this.props.line_item.id)}>-</button>\n              <span className=\"Line-item__quantity\">{this.props.line_item.quantity}</span>\n              <button className=\"Line-item__quantity-update\" onClick={() => this.incrementQuantity(this.props.line_item.id)}>+</button>\n            </div>\n            <span className=\"Line-item__price\">\n              $ { (this.props.line_item.quantity * this.props.line_item.variant.price).toFixed(2) }\n            </span>\n            <button className=\"Line-item__remove\" onClick={()=> this.props.removeLineItemInCart(this.props.line_item.id)}>×</button>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default LineItem;\n","import React, {Component} from 'react';\nimport LineItem from './LineItem';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openCheckout = this.openCheckout.bind(this);\n  }\n\n  openCheckout() {\n    window.open(this.props.checkout.webUrl);\n  }\n\n  render() {\n    let line_items = this.props.checkout.lineItems.map((line_item) => {\n      return (\n        <LineItem\n          updateQuantityInCart={this.props.updateQuantityInCart}\n          removeLineItemInCart={this.props.removeLineItemInCart}\n          key={line_item.id.toString()}\n          line_item={line_item}\n        />\n      );\n    });\n\n    return (\n      <div className={`Cart ${this.props.isCartOpen ? 'Cart--open' : ''}`}>\n        <header className=\"Cart__header\">\n          <h2>Your cart</h2>\n          <button\n            onClick={this.props.handleCartClose}\n            className=\"Cart__close\">\n            ×\n          </button>\n        </header>\n        <ul className=\"Cart__line-items\">\n          {line_items}\n        </ul>\n        <footer className=\"Cart__footer\">\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Subtotal</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.subtotalPrice}</span>\n            </div>\n          </div>\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Taxes</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.totalTax}</span>\n            </div>\n          </div>\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Total</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.totalPrice}</span>\n            </div>\n          </div>\n          <button className=\"Cart__checkout button\" onClick={this.openCheckout}>Checkout</button>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Cart;","// initial state\nconst initState = {\n    isCartOpen: false,\n    checkout: { lineItems: [] },\n    products: [],\n    shop: {}\n  }\n  // actions\n  const CLIENT_CREATED = 'CLIENT_CREATED'\n  const PRODUCTS_FOUND = 'PRODUCTS_FOUND'\n  const CHECKOUT_FOUND = 'CHECKOUT_FOUND'\n  const SHOP_FOUND = 'SHOP_FOUND'\n  const ADD_VARIANT_TO_CART = 'ADD_VARIANT_TO_CART'\n  const UPDATE_QUANTITY_IN_CART = 'UPDATE_QUANTITY_IN_CART'\n  const REMOVE_LINE_ITEM_IN_CART = 'REMOVE_LINE_ITEM_IN_CART'\n  const OPEN_CART = 'OPEN_CART'\n  const CLOSE_CART = 'CLOSE_CART'\n  // reducers\n  export default (state = initState, action) => {\n    switch (action.type) {\n      case CLIENT_CREATED:\n        return {...state, client: action.payload}\n      case PRODUCTS_FOUND:\n        return {...state, products: action.payload}\n      case CHECKOUT_FOUND:\n        return {...state, checkout: action.payload}\n      case SHOP_FOUND:\n        return {...state, shop: action.payload}\n      case ADD_VARIANT_TO_CART:\n        return {...state, isCartOpen: action.payload.isCartOpen, checkout: action.payload.checkout}\n      case UPDATE_QUANTITY_IN_CART:\n        return {...state, checkout: action.payload.checkout}\n      case REMOVE_LINE_ITEM_IN_CART:\n        return {...state, checkout: action.payload.checkout}\n      case OPEN_CART:\n        return {...state, isCartOpen: true}\n      case CLOSE_CART:\n        return {...state, isCartOpen: false}\n      default:\n        return state\n    }\n  }","import {createStore} from 'redux';\nimport reducer from './reducers/cart';\nexport default createStore(reducer);","import React, {Component} from 'react';\nclass VariantSelector extends Component {\n  render() {\n    return (\n      <select\n        className=\"Product__option\"\n        name={this.props.option.name}\n        key={this.props.option.name}\n        onChange={this.props.handleOptionChange}\n      >\n        {this.props.option.values.map((value) => {\n          return (\n            <option value={value} key={`${this.props.option.name}-${value}`}>{`${value}`}</option>\n          )\n        })}\n      </select>\n     \n    );\n  }\n}\n\nexport default VariantSelector;","import React, {Component} from 'react';\nimport VariantSelector from './VariantSelector';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    let defaultOptionValues = {};\n    this.props.product.options.forEach((selector) => {\n      defaultOptionValues[selector.name] = selector.values[0].value;\n    });\n    this.state = { selectedOptions: defaultOptionValues };\n\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    this.handleQuantityChange = this.handleQuantityChange.bind(this);\n    this.findImage = this.findImage.bind(this);\n  }\n\n  findImage(images, variantId) {\n    const primary = images[0];\n\n    const image = images.filter(function (image) {\n      return image.variant_ids.includes(variantId);\n    })[0];\n\n    return (image || primary).src;\n  }\n\n  handleOptionChange(event) {\n    const target = event.target\n    let selectedOptions = this.state.selectedOptions;\n    selectedOptions[target.name] = target.value;\n\n    const selectedVariant = this.props.client.product.helpers.variantForOptions(this.props.product, selectedOptions)\n\n    this.setState({\n      selectedVariant: selectedVariant,\n      selectedVariantImage: selectedVariant.attrs.image\n    });\n  }\n\n  handleQuantityChange(event) {\n    this.setState({\n      selectedVariantQuantity: event.target.value\n    });\n  }\n\n  render() {\n    let variantImage = this.state.selectedVariantImage || this.props.product.images[0]\n    let variant = this.state.selectedVariant || this.props.product.variants[0]\n    let variantQuantity = this.state.selectedVariantQuantity || 1\n    let variantSelectors = this.props.product.options.map((option) => {\n      return (\n        <VariantSelector\n          handleOptionChange={this.handleOptionChange}\n          key={option.id.toString()}\n          option={option}\n        />\n      );\n    });\n    return (\n      <div className=\"Product\">\n        {this.props.product.images.length ? <img src={variantImage.src} alt={`${this.props.product.title} product shot`}/> : null}\n        <h5 className=\"Product__title\">{this.props.product.title}</h5>\n        <span className=\"Product__price\">${variant.price}</span>\n        {variantSelectors}\n        <label className=\"Product__option\">\n          Quantity\n          <input min=\"1\" type=\"number\" defaultValue={variantQuantity} onChange={this.handleQuantityChange}></input>\n        </label>\n        <button className=\"Product__buy button\" onClick={() => this.props.addVariantToCart(variant.id, variantQuantity)}>Add to Cart</button>\n      </div>\n    );\n  }\n}\n\nexport default Product;","import React, { Component } from 'react';\nimport Product from './Product';\n\nclass Products extends Component {\n  render() {\n    let products = this.props.products.map((product) => {\n      return (\n        <Product\n          addVariantToCart={this.props.addVariantToCart}\n          client={this.props.client}\n          key={product.id.toString()}\n          product={product}\n        />\n      );\n    });\n\n    return (\n      <div className=\"Product-wrapper\">\n        {products}\n      </div>\n    );\n  }\n}\n\nexport default Products;","import React from 'react'\nimport { Header, Icon, Image } from 'semantic-ui-react'\n\nconst HeaderH1 = () => (\n  <div>\n    <Header as='h2' icon textAlign='center'>\n      <Icon name='hand peace' circular />\n    </Header>\n  </div>\n)\n\nexport default HeaderH1","import React from 'react'\nimport Products from './shopify/Products';\nimport { connect } from 'react-redux'\nimport store from '../store';\nimport HeaderH1 from './Header.js'\n\nclass Page extends React.Component {\n  constructor() {\n    super();\n    this.addVariantToCart = this.addVariantToCart.bind(this);\n  }\n  addVariantToCart(variantId, quantity) {\n    const state = store.getState(); // state from redux store\n    const lineItemsToAdd = [{variantId, quantity: parseInt(quantity, 10)}]\n    const checkoutId = state.checkout.id\n    state.client.checkout.addLineItems(checkoutId, lineItemsToAdd).then(res => {\n      store.dispatch({type: 'ADD_VARIANT_TO_CART', payload: {isCartOpen: true, checkout: res}});\n    });\n  }\n  render () {\n    const state = store.getState(); // state from redux store\n    let oProducts = <Products\n      products={state.products}\n      client={state.client}\n      addVariantToCart={this.addVariantToCart}\n    />;\n    return(\n      <div>\n          <HeaderH1 />\n        <h1>Connected Color</h1>\n        <p>concept store built with Shopify JS-Buy SDK / React / Redux </p>\n        {oProducts}\n      </div>\n    )\n  }\n}\n\nexport default connect((state) => state)(Page);","import React, { Component } from 'react'\nimport '../styles/nav.css'\nimport { Icon, Menu, Button } from 'semantic-ui-react'\n\nclass Nav extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu icon size='large'>\n        <Menu.Item\n          color='orange'\n        >\n        Connected Color\n        </Menu.Item>\n\n        <Menu.Menu position='right'>\n        <Menu.Item\n          name='Cart'\n          active={activeItem === 'cart'}\n          onClick={this.props.handleCartOpen}>\n            <Button animated='vertical'size='big'>\n            <Button.Content hidden>Cart</Button.Content>\n            <Button.Content visible>\n                <Icon name='shop' />\n            </Button.Content>\n            </Button>\n        </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport Cart from './components/shopify/Cart';\nimport store from './store';\n\n// custom components\nimport Page from './components/Page';\nimport Nav from './components/Nav';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.updateQuantityInCart = this.updateQuantityInCart.bind(this);\n    this.removeLineItemInCart = this.removeLineItemInCart.bind(this);\n    this.handleCartClose = this.handleCartClose.bind(this);\n    this.handleCartOpen = this.handleCartOpen.bind(this);\n  }\n  updateQuantityInCart(lineItemId, quantity) {\n    const state = store.getState(); // state from redux store\n    const checkoutId = state.checkout.id\n    const lineItemsToUpdate = [{id: lineItemId, quantity: parseInt(quantity, 10)}]\n    state.client.checkout.updateLineItems(checkoutId, lineItemsToUpdate).then(res => {\n      store.dispatch({type: 'UPDATE_QUANTITY_IN_CART', payload: {checkout: res}});\n    });\n  }\n  removeLineItemInCart(lineItemId) {\n    const state = store.getState(); // state from redux store\n    const checkoutId = state.checkout.id\n    state.client.checkout.removeLineItems(checkoutId, [lineItemId]).then(res => {\n      store.dispatch({type: 'REMOVE_LINE_ITEM_IN_CART', payload: {checkout: res}});\n    });\n  }\n  handleCartClose() {\n    store.dispatch({type: 'CLOSE_CART'});\n  }\n  handleCartOpen() {\n    store.dispatch({type: 'OPEN_CART'});\n  }\n  render() {\n    const state = store.getState(); // state from redux store\n    return (\n      <div className=\"App\">\n      <Nav handleCartOpen={this.handleCartOpen}/>\n        <Cart\n          checkout={state.checkout}\n          isCartOpen={state.isCartOpen}\n          handleCartClose={this.handleCartClose}\n          updateQuantityInCart={this.updateQuantityInCart}\n          removeLineItemInCart={this.removeLineItemInCart}\n         />\n       <Page/>\n      </div>\n    );\n  }\n}\nexport default connect((state) => state)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport Client from 'shopify-buy';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './styles/shopify.css';\n\n\nconst client = Client.buildClient({\n    storefrontAccessToken: 'cebcc0633d451fc301777269dd25cd83',\n    domain: 'plant-dyed-goods.myshopify.com'\n});\nstore.dispatch({type: 'CLIENT_CREATED', payload: client});\n\n// buildClient() is synchronous, so we can call all these after!\nclient.product.fetchAll().then((res) => {\n    store.dispatch({type: 'PRODUCTS_FOUND', payload: res});\n  });\n  client.checkout.create().then((res) => {\n    store.dispatch({type: 'CHECKOUT_FOUND', payload: res});\n  });\n  client.shop.fetchInfo().then((res) => {\n    store.dispatch({type: 'SHOP_FOUND', payload: res});\n  });\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,  \n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}